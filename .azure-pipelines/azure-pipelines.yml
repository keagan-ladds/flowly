# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
    include:
    - main
    - r/*
 paths:
    include:
      - src/libraries

pool:
  vmImage: ubuntu-latest

variables:
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/r/')]
  sourceVersion: $(Build.SourceVersion)
  buildRevision: $[counter(variables['Build.SourceVersion'], 0)]

stages:
  - stage: Prepare
    jobs:
    - job:
      pool: 
        vmImage: ubuntu-latest
      steps:
        - bash: |
            short_hash=`git rev-parse --short=8 HEAD`
            echo "##vso[build.updatebuildnumber]0.0.0-dev$short_hash.b$(buildRevision)"
          workingDirectory: $(Build.SourcesDirectory)
          displayName: Set Non-Release Build Number
          condition: eq(variables.isRelease, false)

  - stage: Build
    jobs:
    - job:
      displayName: Build
      pool: 
        vmImage: ubuntu-latest
      steps:
      - task: DotNetCoreCLI@2
        inputs:
            command: 'restore'
            projects: '**/libraries/**/*.csproj'
            feedsToUse: 'select'
            
      - task: DotNetCoreCLI@2
        inputs:
            command: 'build'
            projects: '**/libraries/**/*.csproj'
            
      - task: DotNetCoreCLI@2
        inputs:
            command: 'pack'
            packagesToPack: '**/libraries/**/*.csproj'
            versioningScheme: 'byBuildNumber'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'packages'
          publishLocation: 'Container'

  - stage: Deploy
    displayName: Deploy
    jobs:
      - job: 
        pool: 
            vmImage: ubuntu-latest
        displayName: Publish to local feed
        steps:
        - task: DownloadBuildArtifacts@1
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'packages'
            downloadPath: '$(System.ArtifactsDirectory)'

        - task: DotNetCoreCLI@2
          inputs:
            command: 'push'
            packagesToPush: '$(System.ArtifactsDirectory)/packages/*.nupkg'
            nuGetFeedType: 'internal'
            publishVstsFeed: 'f9a3ba6c-3ffc-42f5-9f8a-30e9c233099f'